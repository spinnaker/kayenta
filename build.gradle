/*
 * Copyright 2017 Google, Inc.
 * Copyright 2017 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  repositories {
    jcenter()
    maven { url "https://spinnaker.bintray.com/gradle" }
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath "com.netflix.spinnaker.gradle:spinnaker-dev-plugin:5.1.4"
    classpath "com.netflix.nebula:nebula-kotlin-plugin:$kotlinVersion"
  }
}

allprojects {
  group = "com.netflix.kayenta"
  apply plugin: "spinnaker.base-project"
  apply plugin: "groovy"
  apply plugin: "java"
  apply plugin: "kotlin"

  ext {
    spinnakerDependenciesVersion = '1.35.0'
    if (project.hasProperty('spinnakerDependenciesVersion')) {
      spinnakerDependenciesVersion = project.property('spinnakerDependenciesVersion')
    }
  }

  def checkLocalVersions = [spinnakerDependenciesVersion: spinnakerDependenciesVersion]
  if (ext.has('versions')) {
    def extVers = ext.get('versions')
    if (extVers instanceof Map) {
      checkLocalVersions.putAll(extVers)
    }
  }

  def localVersions = checkLocalVersions.findAll { it.value.endsWith('-SNAPSHOT') }
  if (localVersions) {
    logger.info("Enabling mavenLocal repo for $localVersions")
    repositories {
      mavenLocal()
    }
  }

  spinnaker {
    dependenciesVersion = spinnakerDependenciesVersion
  }

  test {
    testLogging {
      exceptionFormat = "full"
    }
    minHeapSize = "512m"
    maxHeapSize = "512m"
  }

  tasks.withType(JavaExec) {
    if (System.getProperty('DEBUG', 'false') == 'true') {
      jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8191'
    }
  }

  configurations.all {
    exclude group: 'org.mortbay.jetty', module: 'servlet-api'
    exclude group: 'javax.servlet', module: 'servlet-api'
    exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    exclude group: 'org.slf4j', module: 'slf4j-simple'
    resolutionStrategy {
      force 'com.google.guava:guava:20.0'
    }
  }
}

subprojects { project ->
  def licenseExtension = project.extensions.findByName('license')
  if (licenseExtension) {
    licenseExtension.exclude "**/*.json"
    licenseExtension.exclude "**/*.md"
    licenseExtension.exclude "**/*.sse"
    licenseExtension.exclude "**/*.yml"
  }

  repositories {
    jcenter()
    maven { url "https://dl.bintray.com/spinnaker/spinnaker"}
  }

  //c&p this because NetflixOss reverts it to 1.7 and ends up getting applied last..
  project.plugins.withType(JavaBasePlugin) {
    JavaPluginConvention convention = project.convention.getPlugin(JavaPluginConvention)
    convention.sourceCompatibility = JavaVersion.VERSION_1_8
    convention.targetCompatibility = JavaVersion.VERSION_1_8
  }

  dependencies {
    compile spinnaker.dependency('slf4j')
    spinnaker.group('test')
  }
}

defaultTasks ":kayenta-web:run"
